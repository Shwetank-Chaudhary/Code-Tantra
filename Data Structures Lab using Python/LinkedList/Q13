class node:	
	def __init__(self, data):	
		self.data = data	
		self.next = None
class LinkedList:
	def __init__(self):	
		self.head = None
	def printList(self):	
		temp = self.head	
		while temp :	
			print(temp.data)		
			temp = temp.next
	def append(self, new_data):	
		new_node = node(new_data)	
		if(self.head == None):		
			self.head = new_node	
		else:	
			new_node.next = self.head	
			self.head = new_node
def mergeLists(head1, head2):
	temp = None	
	if head1 is None:	
		return head2	
	if head2 is None:	
		return head1	
	if head1.data <= head2.data:
		temp = head1		
		temp.next = mergeLists(head1.next, head2)
	else:	
		temp = head2
		temp.next = mergeLists(head1, head2.next)
	return temp
if __name__ == '__main__':
	list1 = LinkedList()
	a = int(input("Enter number of elements for list1 "))	
	for i in range(a):	
		b = int(input("Enter Element "))
		list1.append(b)
	print("Elements of List1: ")
	list1.printList()
	list2 = LinkedList()
	c = int(input("Enter number of elements for list2 "))	
	for i in range(c):
		d = int(input("Enter Element "))	
		list2.append(d)	
	print("Elements of List2: ")
	list2.printList()	
	list3 = LinkedList()	
	list3.head = mergeLists(list1.head, list2.head)	
	print("Final List:")
	list3.printList()
